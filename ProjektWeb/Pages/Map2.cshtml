@page
@model Map2Model
@{
    ViewData["Title"] = "Level 2";
}
<link rel="stylesheet" href="~/css/Controller.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/MapView.css" asp-append-version="true" />

<style type="text/css">

    header {
        @*
        background-color: rgb(30, 45, 64);
        *@
    }

    body {
        background: linear-gradient(180deg, rgba(234, 218, 206, 0.1) 50%, rgba(234, 218, 206,0.1) 100%), url(../Images/backgrounds/castle_backgroundv2.png);
        background-size: 100% 100%;
        background-repeat: no-repeat;
        background-size: 100% 110%;
    }

    polygon#obramowka {
        fill: rgb(164, 232, 223);
        fill-opacity: 0.3;
        stroke: black;
        stroke-width: 3px;
    }

    .trianglebutton {
        background-color: rgb(16, 21, 27);
    }

    div#mapa2{
        background-color: rgba(24, 40, 54, 0.3);
    }

    div#controller{
        background-color: rgba(24, 40, 54, 0.3);
    }
</style>

<div id="container">

    <div id="controller">
        <form method="post" asp-page-handler="Enemies" style="visibility:hidden;position:absolute;display:inline">
            <button type="submit" id="ruchy" style="visibility:hidden;position:absolute;display:inline">Ruchy</button>
        </form>
        <span id="wait" style="color:crimson; font-size:35px; padding-top:300px;">Tura przeciwnika</span>

        <div id="top">
            <form method="post" asp-page-handler="TopLeft">
                <button type="submit" class="trianglebutton" id="TopLeft"></button>
            </form>
            <form method="post" asp-page-handler="TopRight">
                <button type="submit" class="trianglebutton" id="TopRight"></button>
            </form>
        </div>
        <div id="middle">

            <form method="post" asp-page-handler="Left">
                <button type="submit" class="trianglebutton" id="Left"></button>
            </form>

            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">
                <defs>
                    <clipPath id="clipPolygon3">
                        <polygon points="49.9,4.4     100,28.375   100,73.15  49.9,97.125  0,73.15  0,28.375" />
                    </clipPath>
                </defs>

                <polygon points="49.9,1.4   100,28.375  100,73.15   49.9,100.125  0,73.15  0,28.375" id="obramowka" />

                @if ((App.Demo.Mappables[0] as Projekt.Postaci.Hero)!.isKnight)
                {
                    <image id="heropic" href="/Images/characters/hero_knight_icon.png" width="5vw" height="10vh" x="0%" y="5%" />
                }
                else
                {
                    <image id="heropic" href="/Images/characters/hero_scout_icon.png" width="5vw" height="10vh" x="0%" y="-5%" />
                }
            </svg>

            <form method="post" asp-page-handler="Right">
                <button type="submit" class="trianglebutton" id="Right"></button>
            </form>

        </div>

        <div id="bottom">
            <form method="post" asp-page-handler="DownLeft">
                <button type="submit" class="trianglebutton" id="DownLeft"></button>
            </form>
            <form method="post" asp-page-handler="DownRight">
                <button type="submit" class="trianglebutton" id="DownRight"></button>
            </form>
        </div>
    </div>




    <div id="mapa2">

        @for (int y = Model.Game2.Map.SizeY - 1; y >= 0; y--)
        {
            double mnoz = y * 19.5 - 215;
            var actualmnoz = mnoz.ToString("0.0", System.Globalization.CultureInfo.InvariantCulture);

            <div id="rows" style="position:relative; top:@(actualmnoz)px;">
                @for (int x = 0; x < Model.Game2.Map.SizeX; x++)
                {
                    <div id="@x">

                         <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"> 
                             <defs> 
                                 <clipPath id="clipPolygon3"> 
                                     <polygon points="49.9,4.4     100,28.375   100,73.15  49.9,97.125  0,73.15  0,28.375" /> 
                                 </clipPath> 
                             </defs> 

                             <polygon points="49.9,1.4   100,28.375  100,73.15   49.9,100.125  0,73.15  0,28.375" id="obramowka" /> 

                            @{
                                Projekt.Point punkt;

                                punkt = y % 2 == 0 ? new Projekt.Point(x, y / 2, null, null) : new Projekt.Point(null, null, x, y / 2);

                                var element = @Model.Game2.Map.At(punkt); 

                                switch(element as Projekt.Postaci.Character) 
                                {
                                    case Projekt.Postaci.Hero: 
                                        { 

                                            if((element as Projekt.Postaci.Hero)!.isKnight)
                                            {
                                                <image class="pic" id="pic@(y)@(x)" href="/Images/characters/hero_knight_icon.png" width="auto" height="10vh" x="0%"  y="5%"/>
                                                <div class="lvl" id="lvl@(y)@(x)" style="visibility: hidden">
                                                    <p>@((element as Projekt.Postaci.Character)!.Level)</p>
                                                </div>
                                            }
                                            else
                                            {
                                                <image class="pic" id="pic@(y)@(x)" href="/Images/characters/hero_scout_icon.png" width="auto" height="10vh" x="0%" y="0%" />
                                                <div class="lvl" id="lvl@(y)@(x)" style="visibility: hidden">
                                                    <p>@((element as Projekt.Postaci.Character)!.Level)</p>
                                                </div>
                                            }
                                             break; 
                                         } 
                                    case Projekt.Postaci.Scout: 
                                         {
                                            <image class="pic" id="pic@(y)@(x)" href="/Images/characters/scout_head.png" width="auto" height="10vh" x="0%" y="0%" />
                                            <div class="lvl" id="lvl@(y)@(x)" style="visibility: hidden">
                                                <p>@((element as Projekt.Postaci.Character)!.Level)</p>
                                            </div>
                                            break; 
                                         } 
                                    case Projekt.Postaci.Knight: 
                                         {
                                            if ((element as Projekt.Postaci.Knight)!.IsKing)
                                            {
                                                <image class="pic" id="pic@(y)@(x)" href="/Images/characters/king.png" width="auto" height="10vh" x="0%" y="0%" />
                                                <div class="lvl" id="lvl@(y)@(x)" style="visibility: hidden">
                                                    <p>@((element as Projekt.Postaci.Character)!.Level)</p>
                                                </div>
                                            }
                                            else
                                            {
                                                <image class="pic" id="pic@(y)@(x)" href="/Images/characters/knight_head.png" width="auto" height="10vh" x="0%" y="0%" />
                                                <div class="lvl" id="lvl@(y)@(x)" style="visibility: hidden">
                                                    <p>@((element as Projekt.Postaci.Character)!.Level)</p>
                                                </div>
                                            }
                                            break; 
                                         }
                                    case null:
                                         { 
                                             break; 
                                         } 
                                }
                            }

                        </svg>
                    </div>
                }
            </div>
        }

    </div>

</div>


@if (false)
{
    
@if(Model.EnemiesMove)
{
    <script>
        const buttons = document.querySelectorAll('.trianglebutton');
        const napis = document.getElementById('wait');
        napis.style.visibility = 'visible';

        const baseText = "Tura przeciwnika";
        
        napis.textContent = baseText + ".".repeat(@Model.EnemiesCounter%4);

        buttons.forEach(function(button) {
                button.style.visibility = 'hidden';
              });
        document.getElementById("ruchy").click();
    </script>

}
else
{
    <script>
        const buttons = document.querySelectorAll('.trianglebutton');
        const napis = document.getElementById('wait');
        napis.style.visibility = 'hidden';

        buttons.forEach(function(button) {
                button.style.visibility = 'visible';
              });
    </script>
}
}

<script src="/js/level.js"></script>

