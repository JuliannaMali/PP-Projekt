@page
@model ProjektWeb.Pages.WalkaModel
@{
    Projekt.Postaci.Hero bohater = Model.Hero;
    Projekt.Postaci.Character przeciwnik = Model.Enemy;    

    var walka = Projekt.Ruch.Fight.FightStart(bohater, przeciwnik);
    var przebieg_walki = walka[1];

    HttpContext.Session.SetInt32("EarnedExp", przeciwnik.Level*15);

    var _isKing = (przeciwnik is Projekt.Postaci.Knight k) ? k.IsKing : false;

    object[] hero_info = [
        ((Projekt.Ruch.Fight.WhoIsFighting)walka[0]).hero_name,
        ((Projekt.Ruch.Fight.WhoIsFighting)walka[0]).hero_stats
    ];

    object[] enemy_info = [
        ((Projekt.Ruch.Fight.WhoIsFighting)walka[0]).enemy_name,
        ((Projekt.Ruch.Fight.WhoIsFighting)walka[0]).enemy_stats
    ];
}

<link rel="stylesheet" href="~/css/Fight.css" asp-append-version="true" />

<style type="text/css">
    @*wersja 2
    body {
        background: linear-gradient(180deg, rgba(234, 218, 206, 0.1) 50%, rgba(234, 218, 206,0.1) 100%), url(../Images/backgrounds/fight2_background.jpg);
        background-repeat: no-repeat;
        background-size: 100% 120%;
    }
    *@

    body{
    background: linear-gradient(180deg, rgba(234, 218, 206, 0.1) 50%, rgba(234, 218, 206,0.1) 100%), url(../Images/backgrounds/fight1_background.jpg);
    background-repeat: no-repeat;
    background-size: 100% 120%;
    }


</style>

<krol style="visibility:hidden; position:absolute;">@_isKing</krol>

<content id="content">
    <div class="container">
        <div id="hero">
            <div>
                @if(bohater.isKnight)
                {
                    <img src="~/Images/characters/hero_knight.png" id="hero_img"/>
                }
                else
                {
                    <img src="~/Images/characters/hero_scout.png" id="hero_img" />
                }
                <div class="expbar">
                    <span>@bohater.Exp_owned</span>
                    <span>/ @bohater.Exp_to_lvl_up</span>
                </div>
                <div class="hph hp">&nbsp;</div>
                <div class="liczby"> 
                    <span id="actual_hero_hp">@((int)((List<object>)hero_info[1])[0] * 50)</span>
                    <span>/ <span id="max_hero_hp">@((int)((List<object>)hero_info[1])[0] * 50)</span></span>
                </div>
            </div>
            <div id="hero-info">
                @hero_info[0]
                <br />
                <span id="herolvl">Level: @(((List<object>)hero_info[1])[0])</span><br />
                @if(bohater.isKnight)
                {
                    <span id="herostats">Defense: @(((List<object>)hero_info[1])[1])</span>
                }
                else
                {
                    <span id="herostats">Agility: @(((List<object>)hero_info[1])[1])</span>
                }                    
            </div>
        </div>
        <div id="logs">
            <div>
                <div id="log-area"></div>
            </div>
            <div>
                <form method="post" asp-page="@Model.Source" asp-page-handler="ReturnFromFight">
                    <button type="submit" id="powrot" style="visibility:hidden;display:inline">Powrót</button>
                </form>
            </div>
        </div>
        <div id="enemy">
            <div>
                @if(przeciwnik is Projekt.Postaci.Scout)
                {
                    <img src="~/Images/characters/scout.png" id="enemy_img"/>
                }
                else if(przeciwnik is Projekt.Postaci.Knight)
                {
                    if((przeciwnik as Projekt.Postaci.Knight)!.IsKing)
                    {
                        <img src="~/Images/characters/King.png" id="enemy_img" />
                    }
                    else
                    {
                        <img src="~/Images/characters/knight.png" id="enemy_img" />
                    }
                }
                <div class="hpe hp">&nbsp;</div>
                <div class="liczby">
                    <span id="actual_enemy_hp">@((int)((List<object>)enemy_info[1])[0] * 50)</span>
                    <span>/ <span id="max_enemy_hp">@((int)((List<object>)enemy_info[1])[0] * 50)</span></span>
                </div>
            </div>
            <div id="hero-info">
                @enemy_info[0]
                <br />
                Level: @(((List<object>)enemy_info[1])[0])<br />

                @if (przeciwnik is Projekt.Postaci.Scout)
                {
                    <span>Agility: </span>
                }
                else if (przeciwnik is Projekt.Postaci.Knight)
                {
                    <span>Defense: </span>
                }
                @(((List<object>)enemy_info[1])[1])
            </div>
        </div>
    </div>
    <div id="scroll">
        <img src="~/Images/backgrounds/old-paper.png" />
    </div>


    <button id="walka" style="visibility:hidden; position:relative; bottom:100vh;">Walcz!</button>

    @{
        foreach (KeyValuePair<int, Projekt.Ruch.TurnCourse> element in (Dictionary<int, Projekt.Ruch.TurnCourse>)przebieg_walki)
        {
            <log id="@element.Key" style="visibility:hidden; position:absolute; ">

                @{/*cios bohatera*/}

                @if(element.Value.hero_dmg > 0)
                {
                    <p class="linijka_b">Zadajesz <dmg>@element.Value.hero_dmg</dmg> obrażeń!</p>
                }
                else if (element.Value.hero_dmg == 0)
                {
                    <p class="linijka_b dodge"><dmg>@przeciwnik.Info() uniknął Twojego ciosu!</dmg></p>
                }

                @{/*cios przeciwnika*/}

                @if (element.Value.enem_dmg > 0 && element.Value.curr_enem_hp > 0)
                {
                    <p class="linijka_p">@przeciwnik.Info() zadaje Ci <dmg>@element.Value.enem_dmg</dmg> obrażeń!</p>
                }
                else if (element.Value.enem_dmg == 0)
                {
                    <p class="linijka_p dodge"><dodge>Unikasz ciosu przeciwnika!</dodge></p>
                }


                @if (@element.Value.curr_hero_hp <= 0)
                {
                //game_over
                    <p id="hero_hp" style="visibility:hidden; position: absolute;">0</p>
                }
                else
                {
                //walka toczy się dalej, chyba że przeciwnik umarł
                    <p id="hero_hp" style="visibility:hidden; position: absolute;">@element.Value.curr_hero_hp</p>
                }

                @if (@element.Value.curr_enem_hp <= 0)
                {
                    //wygrana walka
                    if (_isKing)
                    {
                        <form method="post" asp-page="/Win">
                            <button type="submit" id="wygrana" name="WinnerName" value="@bohater.Name" visibility:hidden;display:inline">P</button>
                        </form>
                    }
                <p id="enemy_hp" style="visibility:hidden; position: absolute;">0</p>
                <p id="exp_z_walki">Wygrywasz i zdobywasz <span style="color:rgb(242, 222, 168); text-shadow: 0px 0px 4px #000">@(przeciwnik.Level * 15) pkt</span> doświadczenia!</p>
            }
            else
            {
                //walka toczy się dalej
                <p id="enemy_hp" style="visibility:hidden; position: absolute;">@element.Value.curr_enem_hp </p>
            }
            </log>
        }
    }
</content>


<script>
    let tury = document.querySelectorAll('log');
    const logi = document.querySelector('#log-area');

    const hero_image = document.querySelector('#hero_img');
    const enemy_image = document.querySelector('#enemy_img');

    const curr_hero_hp = document.querySelector('#actual_hero_hp');
    const curr_enem_hp = document.querySelector('#actual_enemy_hp');

    let after_hit_hero = document.querySelectorAll('#hero_hp');
    let after_hit_enem = document.querySelectorAll('#enemy_hp');

    const hero_max_hp = Number(curr_hero_hp.textContent);
    const enemy_max_hp = Number(curr_enem_hp.textContent);

    const heroHPBar = document.querySelector('.hph');
    const enemyHPBar = document.querySelector('.hpe');

    setTimeout(async function() {

        for (let i = 1; i < tury.length; i++) 
        {
            let linijki_przeciwnika = tury[i].querySelectorAll('.linijka_p');
            let linijki_bohatera = tury[i].querySelectorAll('.linijka_b');

                //ruch bohatera
                try
                {
                    //heros żyje, atakuje
                    linijki_bohatera[0].innerHTML;
                curr_enem_hp.innerHTML = after_hit_enem[i].innerHTML;
                    hero_image.style.animation = "heroAttack 1s cubic-bezier(0.25, 0.1, 0.25, 1)";

                    if(linijki_bohatera[0].classList.contains("dodge"))
                    {
                        //unik
                        enemy_image.style.animation = "enemyDodge 1s cubic-bezier(0.25, 0.1, 0.25, 1)";
                    }            
                }
                catch(error)
                {
                    //heros nie żyje, albo przeciwnik zaczyna
                    console.log('pierwszy błąd bohatera - śmierć / zaczyna przeciwnik')
                }

                let enemyhpPercentage = ((Number(curr_enem_hp.textContent.replace(',', '.'))) / enemy_max_hp) * 100;
                enemyHPBar.style.width = enemyhpPercentage + '%';
                let e_hue = (enemyhpPercentage * 120) / 100;
                enemyHPBar.style.backgroundColor = `hsl(${e_hue}, 100%, 35%)`;

                try
                {
                    logi.innerHTML += linijki_bohatera[0].innerHTML + "<br />";
                } 
                catch (error)
                {
                    console.log('drugi błąd bohatera - brak linijki bohatera');
                }

            await new Promise(resolve => setTimeout(resolve, 1100));
            hero_image.style.animation = "";

            //ruch przeciwnika
            try
            {
                linijki_przeciwnika[0].innerHTML;
                curr_hero_hp.innerHTML = after_hit_hero[i].innerHTML;
            }
            catch(error)
            {
                console.log('pierwszy błąd przeciwnika - brak linijek');
            }

            if(Number(curr_enem_hp.textContent.replace(',', '.') > 0))
            {
                enemy_image.style.animation = "enemyAttack 1s cubic-bezier(0.25, 0.1, 0.25, 1)";
            }

            try
            {
                if(linijki_przeciwnika[0].classList.contains("dodge"))
                {
                    //unik
                    hero_image.style.animation = "heroDodge 1s cubic-bezier(0.25, 0.1, 0.25, 1)";
                }
            }
            catch(error)
            {
                ;
            }

            let herohpPercentage = ((Number(curr_hero_hp.textContent.replace(',', '.'))) / hero_max_hp) * 100;
            heroHPBar.style.width = herohpPercentage + '%';
            let h_hue = (herohpPercentage * 120) / 100;
            heroHPBar.style.backgroundColor = `hsl(${h_hue}, 100%, 35%)`;

            try
            {
                logi.innerHTML += linijki_przeciwnika[0].innerHTML + "<br />";
            }
            catch (error)
            {
                console.log('drugi błąd przeciwnika');
            }
            await new Promise(resolve => setTimeout(resolve, 1100));
            enemy_image.style.animation = "";
        }

        if(document.querySelector('krol').innerHTML == "True") 
        {
            document.querySelector('#wygrana').click();
        }

        try
        {
            let exp = document.querySelector('#exp_z_walki').innerHTML;
            logi.innerHTML += exp;
            enemy_image.style.animation = "defeat 1s ease forwards";

            setTimeout(function() {document.querySelector("#powrot").style.visibility = "visible";}, 1000);

        }
        catch(error)
        {
            logi.innerHTML += "Przegrałeś!";
            hero_image.style.animation = "defeat 1s ease forwards";
            console.log('pierwszy błąd pasek expa');

            setTimeout(function() {window.location.href = '/Loss'}, 2000);
        }
    }, 500);
</script>